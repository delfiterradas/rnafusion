nextflow_process {

    name "Test Process VCF_COLLECT"
    script "../main.nf"
    process "VCF_COLLECT"

    test("VCF_COLLECT - Should run without failures") {

        setup {
            run("HGNC_DOWNLOAD") {
                script "../../hgnc/main.nf"
                process {
                    """
                    """
                }
            }

            run("FUSIONREPORT_DOWNLOAD") {
                script "../../../nf-core/fusionreport/download/main.nf"
                process {
                    """
                    """
                }
            }

            run("FUSIONREPORT_DETECT") {
                script "../../../nf-core/fusionreport/detect/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test_sample' ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/arriba.tsv', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/starfusion.tsv', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/fusioncatcher.txt', checkIfExists: true)
                    ]

                    input[1] = FUSIONREPORT_DOWNLOAD.out.fusionreport_ref
                    input[2] = 1
                    """
                }
            }

            run("AGAT_CONVERTSPGFF2TSV") {
                script "../../../nf-core/agat/convertspgff2tsv/main.nf"
                process {
                    """
                    """
                }
            }

        }

        when {
            params {
                // define parameters here. Example:
                // outdir = "tests/results"
            }
            process {
                """
                // define inputs of the process here. Example:
                input[0] = [[FUSIONREPORT_DETECT.out.report], [FUSIONREPORT_DETECT.out.csv]]
                input[1] = [[id:'test'], [HGNC.out.hgnc_ref]]
                input[2] = [[id:'test'], [HGNC.out.hgnc_date]]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("VCF_COLLECT - stub") {

        when {
            params {
                // define parameters here. Example:
                // outdir = "tests/results"
            }
            process {
                """
                // define inputs of the process here. Example:
                // input[0] = file("test-file.txt")
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}
