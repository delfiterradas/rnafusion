nextflow_process {

    name "Test Process CTATSPLICING_STARTOCANCERINTRONS"
    script "../main.nf"
    process "CTATSPLICING_STARTOCANCERINTRONS"
    options "-stub"

    test("test without BAM") {

        when {
            params {
                outdir = "tests/results"
            }
            process {
                """
                input[0] = [
                    [id:"test"],
                    file("test.SJ.out.tab"),
                    file("test.Chimeric.out.junctions"),
                    [],
                    []
                ]
                input[1] = [
                    [id:"reference"],
                    file("ctat_genome_lib")
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.findAll { key, value -> !key.isNumber() }).match() }
            )
        }
    }

    test("test with BAM") {

        when {
            params {
                outdir = "tests/results"
            }
            process {
                """
                input[0] = [
                    [id:"test"],
                    file("test.SJ.out.tab"),
                    file("test.Chimeric.out.junctions"),
                    file("test.Aligned.sortedByCoord.out.bam"),
                    []
                ]
                input[1] = [
                    [id:"reference"],
                    file("ctat_genome_lib")
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.findAll { key, value -> !key.isNumber() }).match() }
            )
        }
    }
}
