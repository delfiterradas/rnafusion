nextflow_workflow {

    name "Test Subworkflow FUSIONREPORT_WORKFLOW"
    script "../main.nf"
    workflow "FUSIONREPORT_WORKFLOW"

    tag "subworkflow"
    tag "fusionreport_workflow"
    tag "fusionreport"

    test("FUSIONREPORT_WORKFLOW - Full Test") {

        setup {
            run("FUSIONREPORT_DOWNLOAD") {
                script "../../../../modules/local/fusionreport/download/main.nf"
                process {
                    """
                    """
                }
            }
        }

        when {
            workflow {
                """
                // Input channels
                input[0] = Channel.of(
                    [ [ id:'test_sample' ],
                    file("https://github.com/nf-core/test-datasets/raw/rnafusion/testdata/human/reads_1.fq.gz") ]
                )

                input[1] = FUSIONREPORT_DOWNLOAD.out.fusionreport_ref

                input[2] = Channel.of(
                    [[ id:'test_sample' ],
                        file("https://github.com/Clinical-Genomics/fusion-report/raw/master/tests/test_data/arriba.tsv") ]
                )

                input[3] =  Channel.of(
                    [[ id:'test_sample' ],
                        file("https://github.com/Clinical-Genomics/fusion-report/raw/master/tests/test_data/starfusion.tsv") ]
                )

                input[4] =  Channel.of(
                    [[ id:'test_sample' ],
                        file("https://github.com/Clinical-Genomics/fusion-report/raw/master/tests/test_data/fusioncatcher.txt") ]
                )

                """
            }
            params {
                fusioninspector_only = false
                tools_cutoff = 1
                arriba          = true
                starfusion      = true
                fusioncatcher   = true
                no_cosmic       = true
                outdir               = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out.fusion_list,
                    workflow.out.fusion_list_filtered,
                    workflow.out.report,
                    workflow.out.csv,
                    workflow.out.versions
                ).match() }
            )
        }
    }


}
