{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/rnafusion/master/nextflow_schema.json",
    "title": "nf-core/rnafusion pipeline parameters",
    "description": "Nextflow rnafusion analysis pipeline, part of the nf-core community.",
    "type": "object",
    "$defs": {
        "skip_steps": {
            "title": "Skip steps",
            "type": "object",
            "description": "Skip analysis steps",
            "default": "",
            "properties": {
                "skip_qc": {
                    "type": "boolean",
                    "description": "Skip QC steps"
                },
                "skip_vcf": {
                    "type": "boolean",
                    "description": "Skip vcf creation step"
                },
                "skip_vis": {
                    "type": "boolean",
                    "description": "Skip visualisation steps"
                }
            },
            "fa_icon": "fas fa-fast-forward"
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["outdir", "genomes_base", "tools"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "exists": true,
                    "pattern": "^\\S+\\.(csv|yaml|yml|json)$",
                    "description": "Path to samplesheet file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/rnafusion/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "cosmic_username": {
                    "type": "string",
                    "fa_icon": "far fa-file-code",
                    "description": "COSMIC username"
                },
                "cosmic_passwd": {
                    "type": "string",
                    "fa_icon": "far fa-file-code",
                    "description": "COSMIC password"
                },
                "genomes_base": {
                    "type": "string",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to reference folder"
                },
                "genome_gencode_version": {
                    "type": "integer",
                    "fa_icon": "far fa-file-code",
                    "description": "gencode version"
                },
                "tools": {
                    "type": "string",
                    "description": "Comma-delimited list of tools to run",
                    "fa_icon": "far fa-file-code",
                    "pattern": "^((arriba|ctatsplicing|fusioncatcher|starfusion|stringtie|fusionreport|fastp|salmon|fusioninspector|all)?,?)*(?<!,)$"
                },
                "read_length": {
                    "type": "integer",
                    "fa_icon": "far fa-file-code",
                    "description": "The length of the reads provided to the pipeline. This is used for the '--sjdbOverhang' option of STAR as read_length - 1. Providing 1 to this option will disable overhang handling.",
                    "default": 100,
                    "minimum": 1
                },
                "arriba_ref_blacklist": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.tsv\\.gz$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to arriba reference blacklist"
                },
                "arriba_ref_cytobands": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.tsv$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to arriba reference cytobands"
                },
                "arriba_ref_known_fusions": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.tsv\\.gz$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to arriba reference known fusions"
                },
                "arriba_ref_protein_domains": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.gff3$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to arriba reference protein domain"
                },
                "arriba_fusions": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.tsv$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to arriba output"
                },
                "download_refs": {
                    "type": "boolean",
                    "fa_icon": "far fa-file-code",
                    "description": "Download references instead of building them (for fusioncatcher and starfusion)"
                },
                "fusioncatcher_fusions": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.txt$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to fusioncatcher output"
                },
                "fusioncatcher_limitSjdbInsertNsj": {
                    "type": "integer",
                    "fa_icon": "far fa-file-code",
                    "description": "Use limitSjdbInsertNsj with int for fusioncatcher",
                    "default": 2000000,
                    "minimum": 1
                },
                "fusioncatcher_ref": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to fusioncatcher references"
                },
                "fusioncatcher_download_link": {
                    "type": "string",
                    "description": "Fusioncatcher download link",
                    "fa_icon": "far fa-file-code",
                    "pattern": "^https?://.*$",
                    "default": "https://master.dl.sourceforge.net/project/rnafusion/fusioncatcher"
                },
                "fusioninspector_limitSjdbInsertNsj": {
                    "type": "integer",
                    "fa_icon": "far fa-file-code",
                    "description": "Use limitSjdbInsertNsj with int for fusioninspector STAR process",
                    "default": 1000000,
                    "minimum": 1
                },
                "fusioninspector_fusions": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.tsv$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to a fusion list file built with format GENE1--GENE2"
                },
                "fusionreport_ref": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to fusionreport references"
                },
                "hgnc_ref": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.txt$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to HGNC database file"
                },
                "hgnc_date": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.txt$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to HGNC timestamp file for database retrieval"
                },
                "qiagen": {
                    "type": "boolean",
                    "fa_icon": "far fa-file-code",
                    "description": "Use QIAGEN instead of SANGER to download COSMIC database"
                },
                "salmon_index": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to salmon index"
                },
                "starfusion_fusions": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.tsv$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to starfusion output"
                },
                "starfusion_ref": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to starfusion references"
                },
                "ctatsplicing_cancer_introns": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "\\S+\\.tsv\\.gz$",
                    "exists": true,
                    "description": "Path to the cancer introns CSV file to create the CTAT-SPLICING reference with",
                    "default": "https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/CANCER_SPLICING_LIB_SUPPLEMENT/cancer_introns.GRCh38.Jun232020.tsv.gz"
                },
                "dfam_hmm": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Dfam HMM database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Dfam HMM database file. Leave as null if using the automatical filling with `--dfam_version` and `--species`.",
                    "fa_icon": "fas fa-link"
                },
                "dfam_h3f": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Dfam H3F database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Dfam H3F database file. Leave as null if using the automatical filling with `--dfam_version` and `--species`.",
                    "fa_icon": "fas fa-link"
                },
                "dfam_h3i": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Dfam H3I database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Dfam H3I database file. Leave as null if using the automatical filling with `--dfam_version` and `--species`.",
                    "fa_icon": "fas fa-link"
                },
                "dfam_h3m": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Dfam H3M database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Dfam H3M database file. Leave as null if using the automatical filling with `--dfam_version` and `--species`.",
                    "fa_icon": "fas fa-link"
                },
                "dfam_h3p": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Dfam H3P database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Dfam H3P database file. Leave as null if using the automatical filling with `--dfam_version` and `--species`.",
                    "fa_icon": "fas fa-link"
                },
                "pfam_url": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to Pfam database file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the Pfam database file. Leave as null if using the automatical filling with `--pfam_version`.",
                    "fa_icon": "fas fa-link"
                },
                "annot_filter_url": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://.*",
                    "description": "URL to annotation filter rule file",
                    "help_text": "Provide a valid HTTP/HTTPS URL pointing to the annotation filter rule file (typically a Perl module).",
                    "default": "https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/AnnotFilterRule.pm",
                    "fa_icon": "fas fa-filter"
                },
                "starindex_ref": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to starindex references"
                },
                "tools_cutoff": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1,
                    "fa_icon": "far fa-file-code",
                    "description": "Discard fusions identified by less than INT tools"
                },
                "whitelist": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.tsv$",
                    "fa_icon": "far fa-file-code",
                    "description": "Path to fusions to add to the input of fusioninspector"
                }
            }
        },
        "read_trimming_options": {
            "title": "Read trimming options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "description": "Options to adjust read trimming criteria.",
            "properties": {
                "trim_tail": {
                    "type": "integer",
                    "description": "The amount of bases to trim at the tail of each read, none will be trimmed by default",
                    "minimum": 0,
                    "fa_icon": "fas fa-cut"
                },
                "trim_tail_fusioncatcher": {
                    "type": "integer",
                    "description": "The amount of bases to trim at the tail of each read for fusioncatcher, none will be trimmed by default",
                    "minimum": 0,
                    "fa_icon": "fas fa-cut"
                },
                "adapter_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.f(n|ast)?a$",
                    "description": "Path to adapter fasta file: default: []",
                    "fa_icon": "fas fa-cut"
                }
            }
        },
        "compression_options": {
            "title": "Alignment compression options",
            "type": "object",
            "fa_icon": "fas fa-cut",
            "description": "Option to compress BAM files to CRAM.",
            "properties": {
                "cram": {
                    "type": "boolean",
                    "description": "Output CRAM files instead of BAM files.",
                    "fa_icon": "fas fa-cut"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "references_only": {
                    "type": "boolean",
                    "description": "Skip running the analysis, only builds the references",
                    "fa_icon": "fas fa-book"
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "fa_icon": "far fa-file-code"
                },
                "fai": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?ai(\\.gz)?$",
                    "description": "Path to FASTA genome index file.",
                    "fa_icon": "far fa-file-code"
                },
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book"
                },
                "gtf": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.gtf?(\\.gz)?$",
                    "description": "Path to GTF genome file.",
                    "fa_icon": "far fa-file-code"
                },
                "refflat": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.refflat?$",
                    "description": "Path to GTF genome file.",
                    "fa_icon": "far fa-file-code"
                },
                "rrna_intervals": {
                    "type": "string",
                    "format": "file-path",
                    "pattern": "^\\S+\\.interval_list?$",
                    "description": "Path to ribosomal interval list.",
                    "fa_icon": "far fa-file-code"
                },
                "no_cosmic": {
                    "type": "boolean",
                    "fa_icon": "far fa-file-code",
                    "description": "Avoid using Cosmic DB (for example in clinical case applications where a paid license applies."
                },
                "fusion_annot_lib": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "\\S+\\.dat\\.gz$",
                    "description": "Path to Fusion Annotation Library to be used in STARFUSION_BUILD.",
                    "fa_icon": "far fa-file-code"
                },
                "species": {
                    "type": "string",
                    "description": "Which species dfam should automatically download, default: homo_sapiens.",
                    "fa_icon": "far fa-file-code",
                    "default": "homo_sapiens"
                },
                "dfam_version": {
                    "type": "number",
                    "description": "Version of dfam to use"
                },
                "pfam_version": {
                    "type": "number",
                    "description": "Version of pfam to use"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                },
                "seq_center": {
                    "type": "string",
                    "description": "Sequencing center",
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This will reported in the BAM header as CN"
                },
                "seq_platform": {
                    "type": "string",
                    "description": "Sequencing platform",
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This will reported in the BAM header as PL."
                },
                "star_ignore_sjdbgtf": {
                    "type": "boolean",
                    "description": "Whether to ignore the GTF in STAR alignment",
                    "hidden": true,
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "Setting false will use GTF file for STAR alignment"
                },
                "star_limit_bam_sort_ram": {
                    "type": "integer",
                    "description": "The maximum amount of RAM to use for sorting the BAM file in STAR. Should by in bits. Setting this value to `0` will use the default amount of STAR.",
                    "fa_icon": "fas fa-toolbox",
                    "minimum": 0
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/skip_steps"
        },
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/read_trimming_options"
        },
        {
            "$ref": "#/$defs/compression_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
