/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/rnafusion -profile test_build,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
Uses a minimal fasta and gtf for testing purposes.
This test is designed to test the `build_references` subworkflow with the following processes on:
- SAMTOOLS_FAIDX
- HGNC_DOWNLOAD
- GATK4_CREATESEQUENCEDICTIONARY
- GET_RRNA_TRANSCRIPTS
- GATK4_BEDTOINTERVALLIST
- GTF_TO_REFFLAT
- GFFREAD
- STAR_GENOMEGENERATE
- ARRIBA_DOWNLOAD
- STARFUSION_BUILD
- FUSIONREPORT_DOWNLOAD

It does not test the following processes of the `build_references` subworkflow:
- GENCODE_DOWNLOAD
- FUSIONCATCHER_BUILD

It does not test the main rnafusion subworkflows by setting references_only = true.
*/

params {
    config_profile_name        = 'Test build references profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Input data
    references_only            = true
    input                      = "${projectDir}/tests/csv/fastq.csv"
    no_cosmic                  = true
    tools                      = "arriba,starfusion,fusionreport,salmon,fusioninspector"
    fasta                      = 'https://github.com/STAR-Fusion/STAR-Fusion-Tutorial/raw/master/minigenome.fa'
    gtf                        = 'https://github.com/STAR-Fusion/STAR-Fusion-Tutorial/raw/master/minigenome.gtf'

    fusion_annot_lib           = 'https://github.com/STAR-Fusion/STAR-Fusion-Tutorial/raw/master/CTAT_HumanFusionLib.mini.dat.gz'
    species                    = 'homo_sapiens'
    dfam_version               = 3.4
    pfam_version               = 37.4
    dfam_hmm                   = "https://www.dfam.org/releases/Dfam_${params.dfam_version}/infrastructure/dfamscan/${params.species}_dfam.hmm"
    dfam_h3f                   = "https://www.dfam.org/releases/Dfam_${params.dfam_version}/infrastructure/dfamscan/${params.species}_dfam.hmm.h3f"
    dfam_h3i                   = "https://www.dfam.org/releases/Dfam_${params.dfam_version}/infrastructure/dfamscan/${params.species}_dfam.hmm.h3i"
    dfam_h3m                   = "https://www.dfam.org/releases/Dfam_${params.dfam_version}/infrastructure/dfamscan/${params.species}_dfam.hmm.h3m"
    dfam_h3p                   = "https://www.dfam.org/releases/Dfam_${params.dfam_version}/infrastructure/dfamscan/${params.species}_dfam.hmm.h3p"
    pfam_file                  = "http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam${params.pfam_version}/Pfam-A.hmm.gz"

}

// Limit and standardize resources for github actions and reproducibility
process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h'
    ]
}
